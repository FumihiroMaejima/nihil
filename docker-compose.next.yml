version: '3.7'

services:
  app-next:
    build: ./app
    container_name: ${PROJECT_NAME}_app-next
    volumes:
      - ./app/backend:/var/www/html
      - ./app/php.ini:/usr/local/etc/php/php.ini
    ports:
      - "${PHP_FPM_PORT}:9000"
    expose:
      - "${PHP_FPM_PORT}"
    depends_on:
      - db-next
    environment:
      TZ: "Asia/Tokyo"
      APP_URL: ${APP_URL}
      APP_ENV: ${APP_ENV}
    networks:
      default:

  nginx-next:
    build: ./node/nginx
    container_name: ${PROJECT_NAME}_nginx-next
    volumes:
      - ./node/nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ./frontend:/var/www/frontend/
    depends_on:
      - app-next
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      # - "${NGINX_HOST_HTTPS_PORT}:443"
      # - "${NGINX_BACK_END_PORT}:${NGINX_BACK_END_PORT}"
      # - "${NGINX_FRONT_END_PORT}:${NGINX_FRONT_END_PORT}"
    environment:
      TZ: "Asia/Tokyo"
    networks:
      default:
        ipv4_address: ${SERVICE_NETWORK_IP}

  db-next:
    platform: 'linux/amd64'
    build: ./mysql
    container_name: ${PROJECT_NAME}_db-next
    volumes:
      - app-volume-store:/var/lib/mysql # データの永続化
      - ./mysql/sql:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      DB_USER: ${DB_USER}
      DB_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: "Asia/Tokyo"
    networks:
      default:

  node-next:
    build: ./node
    container_name: ${PROJECT_NAME}_node-next
    volumes:
      # - ./node/next:/frontend
      # - ./next:/usr/src/app
       - ./node/next:/usr/src/app/
    depends_on:
      - app-next
    ports:
      - "${NODE_APPLICATION_PORT}:${NODE_APPLICATION_PORT}"
    networks:
      default:

  # redis:
  #   image: redis:5.0-alpine
  #   container_name: ${PROJECT_NAME}_redis
  #   volumes:
  #     - redis-store:/data

volumes:
  # redis-store:
  app-volume-store:
    name: ${VOLUME_NAME}
    # driver: local
    external: true

networks:
  default:
    external:
      name: ${NETWORK_NAME}
