# components:
requestBodies:
  createRoleWithForm:
    content:
      application/x-www-form-urlencoded:
        schema:
          type: object
          properties:
            name:
              description: name of Role
              type: string
            code:
              description: code of Role
              type: string
            detail:
              description: detail of Role
              type: string
            permissions:
              description: id of Permission
              type: array
              items:
                type: integer
          required:
            - name
            - code
            - detail
            - permissions
securitySchemes:
  members_auth:
    type: oauth2
    flows:
      implicit:
        authorizationUrl: http://example.com
        scopes:
          write:members: modify members in your account
          read:members: read your members
  authenticaion_key:
    type: apiKey
    name: Authorization
    in: header
  authority_key:
    type: apiKey
    name: X-Auth-Authority
    in: header
  api_key:
    type: apiKey
    name: api_key
    in: header
schemas:
  # $ref: "../schemas/index.yaml"
  AuthRequestResponse:
    $ref: "../schemas/AuthRequestResponse.yaml"
  AuthenticatedUser:
    $ref: "../schemas/AuthenticatedUser.yaml"
  Member:
    $ref: "../schemas/Member.yaml"
  Permissions:
    $ref: "../schemas/Permissions.yaml"
  Roles:
    $ref: "../schemas/Roles.yaml"
  RolesList:
    $ref: "../schemas/RolesList.yaml"
  GameEnemies:
    $ref: "../schemas/GameEnemies.yaml"
  FileData:
    $ref: "../schemas/FileData.yaml"
  ApiSuccessResponse:
    $ref: "../schemas/ApiSuccessResponse.yaml"
  ApiErrorResponse:
    $ref: "../schemas/ApiErrorResponse.yaml"
  ApiResponse:
    $ref: "../schemas/ApiResponse.yaml"
